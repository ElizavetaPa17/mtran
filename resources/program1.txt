DCL 1 person CHAR(50), 2 Name CHAR(50), 2 Age FIXED DECIMAL(3,0), 2 Height FLOAT DECIMAL(5,2);

DCL PersonsArray(10) LIKE(Person);

DCL a CHAR(30);
DCL i FIXED BINARY(15);
DCL f FIXED BINARY(15,11);
DCL totalAge FIXED DECIMAL(4,0) INIT(0);
DCL averageHeight FLOAT DECIMAL(5,2) INIT(0.0);

DCL Sum FLOAT DECIMAL(10,2) INIT(0);
DCL Value FIXED BINARY(31) INIT(1);

i = i + 1;

DO i = 1 TO 10 BY 1;
	PersonsArray[i].Name = 'Person ' || i;
	PersonsArray[i].Age = i * 5;
	PersonsArray[i].Height = i * 1.75;
	totalAge = totalAge + PersonsArray[i].Age;
END;

IF totalAge > 0 THEN
	averageHeight = totalAge / 10;

DO WHILE totalAge < 100;
	totalAge = totalAge + 1;
END;

DO UNTIL totalAge >= 100;
	totalAge = totalAge + 1;
END;

DO WHILE Value <= 10;
   IF Value % 2 = 0 THEN
  	Sum = Sum + Value;
   Value = Value + 1;
END;

DCL CallSuccess CHAR(50);
totalAge = CALL CalculateSum(10, 2);

IF Sum > 0 THEN
   CallSuccess = 'Sum calculated successfully.';
ELSE
   CallSuccess = 'No even numbers found.';

(x + y);
	
CalculateSum:
   PROCEDURE (x, y) RETURNS(FLOAT DECIMAL(10,2));
   DCL x FLOAT DECIMAL(10, 2);
   DCL y FLOAT DECIMAL(10, 2);
   RETURN (x + y);
END CalculateSum;